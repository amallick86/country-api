basePath: /
definitions:
  api.Err:
    properties:
      error:
        type: string
    type: object
  api.HelloResponse:
    properties:
      message:
        type: string
    type: object
  api.createAccountRequest:
    properties:
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  api.createAccountResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  api.loginRequest:
    properties:
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  api.loginResponse:
    properties:
      accessToken:
        type: string
      accessTokenExpiresAt:
        type: string
      refreshToken:
        type: string
      refreshTokenExpiresAt:
        type: string
      session_id:
        type: string
      user:
        $ref: '#/definitions/api.createAccountResponse'
    type: object
  api.renewAccessTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  api.renewAccessTokenResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  title: Country API
  version: "1.0"
paths:
  /hello:
    get:
      operationId: Hello
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.HelloResponse'
      summary: print hello world
      tags:
      - Hello
  /user/create:
    post:
      consumes:
      - application/json
      operationId: CreateUser
      parameters:
      - description: create user
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.createAccountRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.createAccountResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Err'
      summary: add a new user
      tags:
      - User
  /user/login:
    post:
      consumes:
      - application/json
      operationId: Login
      parameters:
      - description: Login request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.loginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Err'
      summary: login
      tags:
      - User
  /user/renew-access-token:
    post:
      consumes:
      - application/json
      operationId: Renew Token
      parameters:
      - description: renew access token by refresh token
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.renewAccessTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.renewAccessTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Err'
      summary: renew token
      tags:
      - User
schemes:
- http
- https
securityDefinitions:
  bearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
